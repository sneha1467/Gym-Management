[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-07-01 14:24:31.400260",
  "module": null,
  "name": "Locker Validation",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Gym Membership",
  "script": "# # validate event on Gym Membership Server Script\n# if doc.locker:\n#     assigned_member = frappe.db.get_value(\"Locker\", doc.locker, \"member\")\n#     if assigned_member and assigned_member != doc.name:\n#         frappe.throw(f\"Locker {doc.locker} is already assigned to another member.\")\n\n\ndef validate(self):\n    if self.locker_limit and len(self.lockers) > self.locker_limit:\n        frappe.throw(f\"Locker limit exceeded! You can assign up to {self.locker_limit} lockers.\")\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-07-01 18:02:38.886149",
  "module": "Gym Management System",
  "name": "Validation",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Gym Membership",
  "script": "# Skip if running test\nif not frappe.flags.in_test:\n\n    # Assign the selected locker to the current member\n    if doc.locker:\n        locker = frappe.get_doc(\"Locker\", doc.locker)\n\n        # Only assign if it's empty or assigned to this member\n        if not locker.member or locker.member != doc.name:\n            locker.member = doc.name\n            locker.save()\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-07-01 18:02:25.830760",
  "module": "Gym Management System",
  "name": "Before Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Gym Membership",
  "script": "# Prevent locker duplication and release old locker if changed\n\n# Check if the doc is being updated (not newly inserted)\nif frappe.db.exists(\"Gym Membership\", doc.name):\n    old_doc = frappe.get_doc(\"Gym Membership\", doc.name)\n\n    # If locker was changed, release the old one\n    if old_doc.locker and old_doc.locker != doc.locker:\n        old_locker = frappe.get_doc(\"Locker\", old_doc.locker)\n        old_locker.member = None\n        old_locker.save()\n\n# If a new locker is assigned, check if it's already taken\nif doc.locker:\n    assigned_member = frappe.db.get_value(\"Locker\", doc.locker, \"member\")\n    if assigned_member and assigned_member != doc.name:\n        frappe.throw(f\"Locker <b>{doc.locker}</b> is already assigned to another member: {assigned_member}\")\n",
  "script_type": "DocType Event"
 }
]